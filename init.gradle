var LinkedHashMap<String, String> replaceDict = //
        ["jcenter.bintray.com"            : "https://maven.aliyun.com/repository/jcenter",//
         "maven.google.com"               : "https://maven.aliyun.com/repository/google",//
         "plugins.gradle.org/m2"          : "https://maven.aliyun.com/repository/gradle-plugin",//
//         "repo.maven.apache.org/maven2/"  : "https://maven.aliyun.com/mvn/search",//
         "repo.maven.apache.org/maven2"   : "https://maven.aliyun.com/repository/central",//
         "repo1.maven.org/maven2"         : "https://maven.aliyun.com/repository/central",//
         "repository.apache.org/snapshots": "https://maven.aliyun.com/repository/apache-snapshots",//

         "repo.grails.org/grails/core"    : "https://maven.aliyun.com/repository/grails-core",//

         "repo.spring.io/libs-milestone"  : "https://maven.aliyun.com/repository/spring",//
         "repo.spring.io/plugins-release" : "https://maven.aliyun.com/repository/spring-plugin",//
        ]
var ArrayList<String> appendList = []
/*var removeList = ['jcenter.bintray.com',
                  'maven.google.com',
                  'plugins.gradle.org/m2',
                  'repo.maven.apache.org',
                  'repo1.maven.org/maven2',
                  'repository.apache.org/snapshots',
                  'repo.spring.io/libs-milestone',
                  'repo.spring.io/plugins-release',
                  'repo.grails.org/grails/core']
var mirrorList = ['https://mirrors.cloud.tencent.com/nexus/repository/maven-public/',
                  'https://maven.aliyun.com/repository/central',
//        'https://maven.aliyun.com/repository/jcenter',
                  'https://maven.aliyun.com/repository/google',
                  'https://maven.aliyun.com/repository/gradle-plugin',
                  'https://maven.aliyun.com/repository/releases',
//        'https://maven.aliyun.com/repository/spring',
//        'https://maven.aliyun.com/repository/spring-plugin',
//        'https://maven.aliyun.com/repository/grails-core',
//        'https://maven.aliyun.com/repository/apache-snapshots'
]*/


/*var SettingsRepoConfig = (RepositoryHandler repo) -> {
    var removeLater = []
    repo.each { ArtifactRepository it ->
        println("gradle init: [SettingsRepoConfig] check (${it.name}: ${it.url})")
        var url = it.url.toString()
        removeList.each(pattern -> {
            if (url.contains(pattern)) {
                removeLater.add(it)
            }
        })
    }
    removeLater.each {
        repo.remove(it)
        println("gradle init: [SettingsRepoConfig] remove (${it.name}: ${it.url})")

    }
    mirrorList.each {
        var repoObject = repo.maven {}
        repoObject.url = URI.create(it)
        repo.add(repoObject)
        println("gradle init: [SettingsRepoConfig] add (${repoObject.name}: ${repoObject.url})")
    }

}*/

var logTag = "init.gradle"
println("[$logTag]")

var repoConfig = { RepositoryHandler handler ->
    configureEach { ArtifactRepository repo ->
        if (!repo.hasProperty('url')) return
        var repo_url = repo.url.toString()
        logger.info("[$logTag] \t${repo.name}(\"$repo_url\")")
        replaceDict.forEach { k, v ->
            if (!repo_url.contains(k)) return
            println("[$logTag] ${repo.name}(\"${repo.url}\") -> $v")
            repo.setUrl(URI.create(v))
        }
    }
}

settingsEvaluated {
    it.pluginManagement {
        repositories(repoConfig)
    }
    it.dependencyResolutionManagement {
        repositories(repoConfig)
    }
}

allprojects {
    buildscript {
        repositories(repoConfig)
    }
    repositories(repoConfig)
}
